<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Adventurous Computing (Posts about jessie)</title><link>https://blog.cyplo.net/</link><description></description><atom:link href="https://blog.cyplo.net/categories/jessie.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Tue, 02 Apr 2019 08:32:41 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Running host programs in isolation inside one-off Docker containers</title><link>https://blog.cyplo.net/posts/2017/02/one-off-docker-runjessie.html</link><dc:creator>Cyryl PÅ‚otnicki</dc:creator><description>&lt;div&gt;&lt;p&gt;I am quite bad at remembering how to launch docker to have everything set up correctly. Hence the following - a script that launches any commandline specified in its arguments inside a new docker container. Current directory is mounted inside the container automatically, so the thing you are executing can have its local dependencies satisfied.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-2"&gt;&lt;/a&gt;&lt;span class="nv"&gt;USERNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;whoami&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-3"&gt;&lt;/a&gt;&lt;span class="nv"&gt;MOUNT_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"/mnt"&lt;/span&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-4"&gt;&lt;/a&gt;&lt;span class="nv"&gt;CURRENT_DIRECTORY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt; -P&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="c1"&gt;# untangle symbolic links if needed - SELinux needs the real path&lt;/span&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-5"&gt;&lt;/a&gt;&lt;span class="nv"&gt;IMAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"debian:jessie"&lt;/span&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; -z &lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-8"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"usage: `basename &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt;` command_to_run_inside_a_container"&lt;/span&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-9"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-10"&gt;&lt;/a&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-12"&gt;&lt;/a&gt;&lt;span class="nv"&gt;RESOLVED_ARGUMENTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-13"&gt;&lt;/a&gt;docker run -i -t -v &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$CURRENT_DIRECTORY&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;:&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$MOUNT_PATH&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;:Z &lt;span class="nv"&gt;$IMAGE&lt;/span&gt; bash -c &lt;span class="s2"&gt;"useradd -M -d '&lt;/span&gt;&lt;span class="nv"&gt;$MOUNT_PATH&lt;/span&gt;&lt;span class="s2"&gt;' &lt;/span&gt;&lt;span class="nv"&gt;$USERNAME&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; cd '&lt;/span&gt;&lt;span class="nv"&gt;$MOUNT_PATH&lt;/span&gt;&lt;span class="s2"&gt;' &amp;amp;&amp;amp; bash -c '&lt;/span&gt;&lt;span class="nv"&gt;$RESOLVED_ARGUMENTS&lt;/span&gt;&lt;span class="s2"&gt;'"&lt;/span&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-15"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# restore SELinux context for the current directory&lt;/span&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-16"&gt;&lt;/a&gt;&lt;span class="nv"&gt;restorecon_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;which restorecon&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-17"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; -x &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$restorecon_path&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-18"&gt;&lt;/a&gt;    restorecon -R &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$CURRENT_DIRECTORY&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a name="rest_code_bb36532e7e1f481aa2a02c383b17d8b1-19"&gt;&lt;/a&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;I use vanilla Debian Jessie as a run platform there, mostly because this is what most of my servers run.
The script covers setting up SELinux and mounting the directory from which it is run as &lt;tt class="docutils literal"&gt;/mnt&lt;/tt&gt; inside the container while also having the default non-root user added.&lt;/p&gt;
&lt;p&gt;Run Jessie, run !&lt;/p&gt;&lt;/div&gt;</description><category>container</category><category>docker</category><category>jessie</category><category>linux</category><guid>https://blog.cyplo.net/posts/2017/02/one-off-docker-runjessie.html</guid><pubDate>Fri, 17 Feb 2017 22:08:46 GMT</pubDate></item></channel></rss>