<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Adventurous Computing (Posts about blog)</title><link>https://blog.cyplo.net/</link><description></description><atom:link href="https://blog.cyplo.net/categories/cat_blog.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Tue, 02 Apr 2019 08:32:43 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Adding graphs to posts in Nikola</title><link>https://blog.cyplo.net/posts/2017/07/adding-graphs-to-posts-in-nikola.html</link><dc:creator>Cyryl Płotnicki</dc:creator><description>&lt;div&gt;&lt;p&gt;I really like to teach, try to explain things in a simple manner. There is often no better way of making an explanation than visualizing it.
The problem is that I really can't draw, especially on a computer.
Wouldn't it be awesome if I could make the computer draw for me ?
I found out that, unsurprisingly, there is a software for that already. The one I like is called mermaid - it renders a simple text description of a graph or diagram into an html representation. Can look something like this.&lt;/p&gt;
&lt;div class="mermaid"&gt;
graph TB
                subgraph one
                a1--&amp;gt;a2
                end
                subgraph two
                b1--&amp;gt;b2
                end
                subgraph three
                c1--&amp;gt;c2
                end
                c1--&amp;gt;a2
&lt;/div&gt;&lt;p&gt;This blog is rendered by Nikola hence I would like to show you how I've added mermaid support to my Nikola installation.
I use &lt;tt class="docutils literal"&gt;USE_BUNDLES = False&lt;/tt&gt; in &lt;tt class="docutils literal"&gt;conf.py&lt;/tt&gt; as for it gives me more control and is more HTTP/2 friendly.
With that disabled I can include mermaid's style and js files like so (also in &lt;tt class="docutils literal"&gt;conf.py&lt;/tt&gt;):&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_18fc00840d5840d3b3fa506a55fb80b1-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;EXTRA_HEAD_DATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"""&lt;/span&gt;
&lt;a name="rest_code_18fc00840d5840d3b3fa506a55fb80b1-2"&gt;&lt;/a&gt;&lt;span class="s2"&gt;&amp;lt;link rel="stylesheet" type="text/css" href="/assets/css/fontawesome.css"&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_18fc00840d5840d3b3fa506a55fb80b1-3"&gt;&lt;/a&gt;&lt;span class="s2"&gt;&amp;lt;link rel="stylesheet" type="text/css" href="/assets/css/titillium.css"&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_18fc00840d5840d3b3fa506a55fb80b1-4"&gt;&lt;/a&gt;&lt;span class="s2"&gt;&amp;lt;link rel="stylesheet" type="text/css" href="/assets/css/mermaid.forest.css"&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_18fc00840d5840d3b3fa506a55fb80b1-5"&gt;&lt;/a&gt;&lt;span class="s2"&gt;"""&lt;/span&gt;
&lt;a name="rest_code_18fc00840d5840d3b3fa506a55fb80b1-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_18fc00840d5840d3b3fa506a55fb80b1-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;BODY_END&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"""&lt;/span&gt;
&lt;a name="rest_code_18fc00840d5840d3b3fa506a55fb80b1-8"&gt;&lt;/a&gt;&lt;span class="s2"&gt;&amp;lt;script src="/assets/js/mermaid.js"&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_18fc00840d5840d3b3fa506a55fb80b1-9"&gt;&lt;/a&gt;&lt;span class="s2"&gt;&amp;lt;script&amp;gt;mermaid.initialize({startOnLoad:true, cloneCssStyles: false});&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_18fc00840d5840d3b3fa506a55fb80b1-10"&gt;&lt;/a&gt;&lt;span class="s2"&gt;"""&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Where do all these files come from though ? In my case, I have a custom theme, based on &lt;tt class="docutils literal"&gt;zen&lt;/tt&gt; called &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;zen-cyplo&lt;/span&gt;&lt;/tt&gt;. The assets in the sources are located under &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;themes/zen-cyplo/assets/&lt;/span&gt;&lt;/tt&gt;.
Oh, and &lt;tt class="docutils literal"&gt;cloneCssStyles: false&lt;/tt&gt; is there as the default of &lt;tt class="docutils literal"&gt;true&lt;/tt&gt; made the different css styles on my blog clash.
Finally, to use mermaid in the post do (for reStructured Text):&lt;/p&gt;
&lt;pre class="code restructuredtext"&gt;&lt;a name="rest_code_c8a18dea30594f6c835b791003c28b33-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;raw&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; html
&lt;a name="rest_code_c8a18dea30594f6c835b791003c28b33-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_c8a18dea30594f6c835b791003c28b33-3"&gt;&lt;/a&gt;        &amp;lt;div class="mermaid"&amp;gt;
&lt;a name="rest_code_c8a18dea30594f6c835b791003c28b33-4"&gt;&lt;/a&gt;        graph TB
&lt;a name="rest_code_c8a18dea30594f6c835b791003c28b33-5"&gt;&lt;/a&gt;                        subgraph one
&lt;a name="rest_code_c8a18dea30594f6c835b791003c28b33-6"&gt;&lt;/a&gt;                        a1--&amp;gt;a2
&lt;a name="rest_code_c8a18dea30594f6c835b791003c28b33-7"&gt;&lt;/a&gt;                        end
&lt;a name="rest_code_c8a18dea30594f6c835b791003c28b33-8"&gt;&lt;/a&gt;                        subgraph two
&lt;a name="rest_code_c8a18dea30594f6c835b791003c28b33-9"&gt;&lt;/a&gt;                        b1--&amp;gt;b2
&lt;a name="rest_code_c8a18dea30594f6c835b791003c28b33-10"&gt;&lt;/a&gt;                        end
&lt;a name="rest_code_c8a18dea30594f6c835b791003c28b33-11"&gt;&lt;/a&gt;                        subgraph three
&lt;a name="rest_code_c8a18dea30594f6c835b791003c28b33-12"&gt;&lt;/a&gt;                        c1--&amp;gt;c2
&lt;a name="rest_code_c8a18dea30594f6c835b791003c28b33-13"&gt;&lt;/a&gt;                        end
&lt;a name="rest_code_c8a18dea30594f6c835b791003c28b33-14"&gt;&lt;/a&gt;                        c1--&amp;gt;a2
&lt;a name="rest_code_c8a18dea30594f6c835b791003c28b33-15"&gt;&lt;/a&gt;        &amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;You can click on &lt;tt class="docutils literal"&gt;source&lt;/tt&gt; button located below the title of this post to see it in action. If you are interested in the build process and how all these come together - the complete sources for this blog are hosted under &lt;a class="reference external" href="https://github.com/cyplo/blog"&gt;https://github.com/cyplo/blog&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>blog</category><category>graph</category><category>mermaid</category><category>nikola</category><category>rst</category><guid>https://blog.cyplo.net/posts/2017/07/adding-graphs-to-posts-in-nikola.html</guid><pubDate>Sat, 15 Jul 2017 20:13:50 GMT</pubDate></item><item><title>Configuring Tor non-exit relay</title><link>https://blog.cyplo.net/posts/2011/10/06/configuring-tor-non-exit-relay.html</link><dc:creator>Cyryl Płotnicki</dc:creator><description>&lt;div&gt;&lt;p&gt;I'm for privacy. I'm for cryptography. I do provide
&lt;a class="reference external" href="https://www.torproject.org/"&gt;Tor&lt;/a&gt; relays for the good of all people.
Here's how to configure a classic non-exit Tor relay on your machine. In
my case I got it running on the VPS server, with 2 IP addresses and some
bandwidth quota applied. I wanted the Tor traffic to be easily
recognizable from outside as different from the 'normal' traffic coming
from my server. Second requirement was to make Tor not use my whole
traffic quota up. Here's my config, with some notes&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-1"&gt;&lt;/a&gt;cyryl@serv:~$ cat /etc/tor/torrc
&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-2"&gt;&lt;/a&gt;SocksPort 0 # what port to open for local application connections
&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-3"&gt;&lt;/a&gt;SocksListenAddress 127.0.0.1 # accept connections only from localhost
&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-4"&gt;&lt;/a&gt;RunAsDaemon 1
&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-6"&gt;&lt;/a&gt;DataDirectory /var/lib/tor
&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-8"&gt;&lt;/a&gt;ORPort 9001 #switches Tor to server mode
&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-9"&gt;&lt;/a&gt;ORListenAddress tor.cyplo.net
&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-10"&gt;&lt;/a&gt;OutboundBindAddress 91.213.195.28 #what IP address use to direct the outbound traffic
&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-11"&gt;&lt;/a&gt;Nickname cyplonet
&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-12"&gt;&lt;/a&gt;Address tor.cyplo.net
&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-13"&gt;&lt;/a&gt;ExitPolicy reject *:* # no exits allowed
&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-14"&gt;&lt;/a&gt;AccountingStart day 09:00
&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-15"&gt;&lt;/a&gt;AccountingMax 2 GB
&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_310fe3af7bb4466392e7033d8472d05c-17"&gt;&lt;/a&gt;MyFamily cyplonethome, cyplonet
&lt;/pre&gt;&lt;/div&gt;</description><guid>https://blog.cyplo.net/posts/2011/10/06/configuring-tor-non-exit-relay.html</guid><pubDate>Thu, 06 Oct 2011 15:33:49 GMT</pubDate></item><item><title>How not to blog</title><link>https://blog.cyplo.net/posts/2011/03/27/blog.html</link><dc:creator>Cyryl Płotnicki</dc:creator><description>&lt;p&gt;Today's post is definitely not a tech one. Or maybe just a bit. It's
about blogging, from the other side of the keyboard. PEBKAC-style.
Fun-fact: Did you know that 'kac' in Polish means 'hangover' ? To the
point. I realised that I have dozens of posts in the state of started
but definitely not finished. Why is that so ? Is it that I am superbusy
with my new work ? Kinda. Is that that I am the guy responsible for the
installation of the sound system in one of the new Wrocław's clubs ?
Sounds pretty serious but still not a perfect excuse. The thing is that
there is no right excuse for not doing something you want to do. Do it
or don't. Don't pretend to. The funny thing is that the smallest
possible posts, like
&lt;a class="reference external" href="https://blog.cyplo.net/2011/01/29/netbeans-6-9-rails-3-ubuntu-10-10/"&gt;this&lt;/a&gt;, brought me
the most views. I don't wanna loose you guys because I don't feel like
blogging recently. Mine unfinished tech posts won't probably make it
because I just don't remember what were these small tech tricks I used
to solve that problems. Not even wrote them down as I was so enlightened
by the superiority of my solutions. Don't do that. Take notes about
everything which you would possibly need and start working on the
sentences and wording. Rigth now. Go. Hit publish and let the world
know. Thanks go to
&lt;a class="reference external" href="http://techcrunch.com/2011/03/27/why-startups-need-to-blog-and-what-to-talk-about/"&gt;TC&lt;/a&gt;
&amp;amp; &lt;a class="reference external" href="http://techcrunch.com/author/marksuster/"&gt;Mark Suster&lt;/a&gt;.&lt;/p&gt;</description><guid>https://blog.cyplo.net/posts/2011/03/27/blog.html</guid><pubDate>Sun, 27 Mar 2011 22:25:23 GMT</pubDate></item></channel></rss>