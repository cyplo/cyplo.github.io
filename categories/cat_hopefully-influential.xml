<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Adventurous Computing (Posts about hopefully influential)</title><link>https://blog.cyplo.net/</link><description></description><atom:link rel="self" type="application/rss+xml" href="https://blog.cyplo.net/categories/cat_hopefully-influential.xml"></atom:link><language>en</language><lastBuildDate>Tue, 01 Jan 2019 13:56:09 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Conferences you did not know existed and now you know you just need to go to</title><link>https://blog.cyplo.net/posts/2016/03/13/conferences.html</link><dc:creator>Cyryl Płotnicki</dc:creator><description>&lt;div&gt;&lt;div class="section" id="go-to-conferences-it-s-good-for-you"&gt;
&lt;h2&gt;Go to conferences. It's good for you.&lt;/h2&gt;
&lt;p&gt;Ever wondered why to go to conferences ? Is it worth it, especially if
you &lt;a class="reference external" href="http://sarah.thesharps.us/2016/02/02/first-timers-guide-to-foss-conferences/"&gt;do not feel
confident&lt;/a&gt;
that the conference is on something that would be in an immediate realm
of your day-to-day interests ? Just go ! You might end up learning
something and meeting new people. And new people mean more variables to
mix up your life. A bit scary, I know. Still worth it though. Wondered
what conference in &lt;strong&gt;Europe&lt;/strong&gt; are weird enough so people wouldn't mind
having another misfit ? Here you go.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="nucl-ai"&gt;
&lt;h2&gt;nucl.ai&lt;/h2&gt;
&lt;p&gt;Now imagine something niche within the industry. To me, AI comes to
mind. Mages in robes in their towers, sending out autonomous robot
armies against each other. Right ? There's a conference for that ! At
&lt;a class="reference external" href="http://nucl.ai/"&gt;nucl.ai&lt;/a&gt;, in July, in Vienna, you can meet AI
professionals from academia and industry alike, most of them coming from
game development background. The atmosphere is very newcomer-friendly,
the only requirement is that you're interested in AI, not necessarily
having anything to do with it professionally. Petra and Alex, the
organizers, are wonderful people that make this conference quite unique.
It's happy fun to see ideas floating from academia to the industry and
vice versa. Don't forget the presentations on work-in-progress major AAA
games ! I've learned there that the everyday programming in the games
industry is quite different than the one I do in terms of best practices
and patterns. Definitely worth a try !&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="erlang-user-conference"&gt;
&lt;h2&gt;Erlang User Conference&lt;/h2&gt;
&lt;p&gt;Speaking of something completely different. Erlang ! Was functional
before being functional was &lt;a class="reference external" href="https://www.youtube.com/watch?v=xrIjfIjssLE"&gt;considered
cool&lt;/a&gt;. Very practical,
very fast, parallelize everything ! Processes everywhere ! Message
passing ! Want to feel the groove as well ? Visit Stockholm in September
for &lt;a class="reference external" href="http://www.erlang-factory.com/"&gt;Erlang User Conference&lt;/a&gt;. Meet
creators of the language, talk about massive scale deployments. Other FP
languages are welcome. I would even say, the more strange the better.
&lt;a class="reference external" href="http://www.idris-lang.org/"&gt;Idris&lt;/a&gt; seems to be the topic of interest
as well.  Eat good food, walk the city of dynamite. Erlang has a quite
close-knit community which gives you this warm family feeling.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="socrates"&gt;
&lt;h2&gt;SoCraTes&lt;/h2&gt;
&lt;p&gt;Speaking of family. There's a family of conferences known as
&lt;a class="reference external" href="https://www.socrates-conference.de/"&gt;SoCraTes&lt;/a&gt;. Software
Crafstmanship and Testing. SoCraTes. Get it ? :D As it's more than one
conference a year, it's harder to go to all of them. I only went to
&lt;a class="reference external" href="http://www.codefreeze.fi/"&gt;Codefreeze&lt;/a&gt;, in Finland, in January, and
only once, but loved it already. Codefreeze, Finland, in January. Get it
?! :D First thing is that you don't know what will happen there. You
just go, meet the people and then you sit down and everyone talks about
what they would like to learn and what they can share. This way you come
up with some loose agenda you follow more or less. One track, very
intense. Talking, swimming in ice water, learning, sauna going. Very
intimate feel, not many people, lots of things to learn.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="chaos-communication-congress"&gt;
&lt;h2&gt;Chaos Communication Congress&lt;/h2&gt;
&lt;p&gt;Speaking of lots of people and intimate feel. &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Chaos_Communication_Congress"&gt;Chaos Communication
Congress&lt;/a&gt;
is, I think, the biggest gathering of all nerds and freaks in Europe,
yet being there feels quite at home. The best organized conference I've
been to. Friendly people showing their wares on their humble tables, 4
simultaneous tracks, huge building with intricate hallways. It's
cyberpunk, it's inclusive, it's about hardcore infosec topics, it's
about politics. Everything's there, everyone's there. 4 days of data
being constantly uploaded to your brain, on the waves of &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Club-Mate"&gt;Club
Mate&lt;/a&gt;. Feels like an
extended holiday present, as it's happening in the last week of
December.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-camps"&gt;
&lt;h2&gt;The Camps&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Chaos_Communication_Camp"&gt;Chaos Communication
Camp&lt;/a&gt; and
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Observe._Hack._Make."&gt;The Dutch Camp&lt;/a&gt;.
Imagine CCC, the Congress, but in the woods. Middle of nowhere,
multigigabit internet connection. sleeping in the tent, then going to a
world-class lecture. Both CCC, the camp, and The Dutch Camp, the camp,
are happening every 4 years, each of them taking alternating slots. So
every 2 years there is a camp somewhere. Did I mention that the location
changes every event ? Happy camping !&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="summary"&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;So go out there. Explore. Meet people. Learn. Have fun. None of the
above are much expensive and most of the events have a policy of "write
to us if you want to go but can't afford the ticket". Friendly people
fixing problems together.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;nucl.ai: July, tickets around 250EUR&lt;/div&gt;
&lt;div class="line"&gt;EUC: September, tickets around 350EUR&lt;/div&gt;
&lt;div class="line"&gt;SoCraTes: the cost and the time depend on the event&lt;/div&gt;
&lt;div class="line"&gt;CCC: last week of December, tickets around 100EUR&lt;/div&gt;
&lt;div class="line"&gt;The Camps: summer, tickets around 125EUR&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>artificial intelligence</category><category>camping</category><category>ccc</category><category>chaos</category><category>codefreeze</category><category>conferences</category><category>erlang</category><category>functional programming</category><category>killer segways</category><category>nuclai</category><category>socrates</category><category>talks</category><category>travel</category><guid>https://blog.cyplo.net/posts/2016/03/13/conferences.html</guid><pubDate>Sun, 13 Mar 2016 11:43:03 GMT</pubDate></item><item><title>Meetings</title><link>https://blog.cyplo.net/posts/2014/01/21/meetings.html</link><dc:creator>Cyryl Płotnicki</dc:creator><description>&lt;div&gt;&lt;div class="section" id="decisions"&gt;
&lt;h2&gt;Decisions&lt;/h2&gt;
&lt;p&gt;Most of the meetings come from the desire to have a decision made. The
problem is in most cases is that these are not decisions to be made now.
Software prototyping is cheap. We should just try to build a working
solution and iterate around. Let's prototype. Get someone most annoyed
by the problem and leave them to build it. Of course, the clearer
communication of what they are actually doing the better. It should be
something like ‘hey I’m gonna build this – okay’ or even ‘hey, I”ve
build that, let’s see how it behaves’ Not like “we should now spend
multiple meetings on discussing how this should be done’. Just make it
work, instead of talking about it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="documentation"&gt;
&lt;h2&gt;Documentation&lt;/h2&gt;
&lt;p&gt;There are people that like those meetings around decision making. And
those decisions, that should not be made now, of course, need proper
documentation around to prove the point. And document the
decision-making process. Oh, and office software and document versions
of course. That's what everyone uses. What, you developers have text
files and this git stuff ?! The thing is if the need for some
documentation for something comes from the team then the team will make
it when needed. If not then probably not.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sharing-the-knowledge"&gt;
&lt;h2&gt;Sharing the knowledge&lt;/h2&gt;
&lt;p&gt;Other possible reasoning behind having a meeting can be that of some
knowledge needs to be shared. And that's a noble cause. Just don't make
a meeting out of it. Make a lecture. A presentation. No audience members
interacting with each other. Speaker talking and maybe sometimes
allowing questions. The knowledge sharing sessions are oftentimes a
prelude to the decisionmaking meetings. See above.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="confirming-your-ideas"&gt;
&lt;h2&gt;Confirming your ideas&lt;/h2&gt;
&lt;p&gt;Sometimes however somebody just wants some confirmation on their idea,
maybe before building a prototype. Then, there is a good chance that
they already know who they should ask. No meeting then. Just ask the
people you know you should ask. 1-on-1 interaction. Maybe somebody will
overhear and start listening. Notice that the social dynamic is very
different from the meeting then, two people having a conversation and
another one politely listening, maybe being invited to the conversation
after some while. Just look how it works in between talks on
conferences. Very different from “everybody says everything” meetings.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-meetings-that-are-left"&gt;
&lt;h2&gt;The meetings that are left&lt;/h2&gt;
&lt;p&gt;Also, if for some cosmic reason you really need to have a meeting – make
it opt-in. Just the people who are interested coming. Set the timer.
There is one I particularly like - a clock showing amount of money
wasted so far by this meeting.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="post-scriptum"&gt;
&lt;h2&gt;Post scriptum&lt;/h2&gt;
&lt;p&gt;37 signals on meetings:
&lt;a class="reference external" href="https://emeamail.infusion.com/owa/redir.aspx?C=GHIP5YF7-Ue3AtGX8FaxkQmR1qki6NAI6jelfyclFt3i89MSQOQacIq26I2scmQ0qi3zcPAGWZQ.&amp;amp;URL=http%3a%2f%2fgettingreal.37signals.com%2fch07_Meetings_Are_Toxic.php"&gt;http://gettingreal.37signals.com/ch07_Meetings_Are_Toxic.php&lt;/a&gt;
These guys have the idea of every communication should be async and read
when convenient, hence their emphasis on email. That gets you to really
think of your proposal and really describe it and stuff, which is
sometimes good. To stop and think, RFC-style. However, as mentioned
above, imho most of the times it’s quicker to just write the software.
Possibly, also, I just like ‘hey, got a second?’ approach better.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><guid>https://blog.cyplo.net/posts/2014/01/21/meetings.html</guid><pubDate>Tue, 21 Jan 2014 20:13:05 GMT</pubDate></item><item><title>How to hire a programmer, a.k.a. tech recruitment explained</title><link>https://blog.cyplo.net/posts/2011/07/24/how-to-hire-people.html</link><dc:creator>Cyryl Płotnicki</dc:creator><description>&lt;p&gt;Today’s post is not a recipe at all. Maybe a little. More of viewpoint
than a recipe. Here’s what I think the tech recruitment should look
like. It won’t be cheap. And yes, I have conducted a lot of interviews
in my life. Start by describing the position. Who are you looking for,
what would they do for you, how would they bring money to your company.
Use words, not techie talk. I found most of the job descriptions online
do not match the real expectations of the employer. You just want a good
programmer, a person who thinks about what they does. It really doesn’t
matter if they know Haskell and you write in Erlang. I doesn’t matter if
they think in asm when you’re looking for Forth. I doesn’t matter if
they are Linux nerds and you’re Windows-only, if they know how a
computer works. As long as they think about what they do and know what’s
that for and agree with your goals, that’s perfectly fine. If you
translate your desire for a good programmer into a bulletpoint list of
tech words you dehumanize it. Don’t look for skillsets, look for people
I say. How to check whether someone is a good programmer then ? How to
score people against such a vague job description ? You don’t score
people I say, you just sort the set of people. I start by a rather loose
conversation. Tell me about the point in life you’re in, tell me
something about what fascinates you in the programming and finally
what’s your motivation for changing the job and why do you want to work
with us ? Somewhere in the middle I ask about the projects, what
technologies you do like, what not, why not. Do you feel comfortable
teaching others ? Then the talk gets momentum. We do focus on computers
finally, why should it slow down, really ? If someone is fascinated by
The Machines you should already noticed that, to be honest. Same with
boring people or annoying people. If you do not want to work with them
then do not hire them. Even if they’re brilliant. How does the computer
work then ? How does this happen that I have this text file full of
strange writings and suddenly they make the computer do stuff ? Why it’s
not a good idea to get the modern pc to fly a space shuttle ? What’s a
stack and what’s a heap ? Is the stack memory different from the heap
memory ? Why so. And the why. The most important question for me is the
mighty why. Not only should they understand how something works, but
more importantly why it works like that. I enjoy working with people who
are microwave-curious than the hex-feared ones. How does the microwave
oven heat things ? Does the DEADBEEF scare your ? Maybe it needs some
heat treatment then. Talk with people, make notes. What annoys you, what
impresses you. Do the exercises with them. Ask them how would they solve
a simple but a reallife problem. Design the solution with them. The more
lifelike the work scenario the better. Do the things you’d normally do
with your work colleague. And order the set of candidates. Work as the
simple max function. Take the first one and the second one,. Decide
which one seems better suited for you. Then take the next one and
compare her to the current max. And please hire people only when you’re
ready to hire them. UPDATE. After writing this post I've stumbled on
this &lt;a class="reference external" href="http://37signals.com/svn/posts/2628-how-to-hire-a-programmer-when-youre-not-a-programmer"&gt;37signal's
art&lt;/a&gt;
. Worth reading.&lt;/p&gt;</description><category>recruitment</category><guid>https://blog.cyplo.net/posts/2011/07/24/how-to-hire-people.html</guid><pubDate>Sun, 24 Jul 2011 20:31:55 GMT</pubDate></item></channel></rss>