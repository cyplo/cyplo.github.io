<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Adventurous Computing (Posts about automation)</title><link>https://blog.cyplo.net/</link><description></description><atom:link type="application/rss+xml" href="https://blog.cyplo.net/categories/automation.xml" rel="self"></atom:link><language>en</language><lastBuildDate>Thu, 21 Feb 2019 19:02:35 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Sporting Let's Encrypt certificate</title><link>https://blog.cyplo.net/posts/2015/11/17/lets-encrypt-certificate.html</link><dc:creator>Cyryl Płotnicki</dc:creator><description>&lt;p&gt;&lt;a class="reference external" href="https://letsencrypt.org/"&gt;Let's Encrypt&lt;/a&gt; is soon to be publicly
available service to provide TLS certificates for free and in automated
fashion. I'm helping them test their systems by participating in the
&lt;a class="reference external" href="https://letsencrypt.org/2015/11/12/public-beta-timing.html"&gt;beta
program&lt;/a&gt;.
Because of that this site is now sporting, publicly recognizable
certificate from Let's Encrypt. Yay ! The work they are doing I believe
is of much importance. Lack of easy path for getting TLS certificate was
a major hurdle for the most of the website owners, otherwise keen on
getting their traffic encrypted. This, in turn, is important for two
reasons. Not allowing the content you are viewing on the internet to be
snooped at, not leaking you private data is one thing. Other, less
known, but as much important, is countering the ability of injecting any
malicious code/data into the responses from the servers you got and in
turn preventing lots of man in the middle attacks. Hopefully, when Let's
Encrypt becomes publicly available we would be on the path to much more
friendly internet for all.&lt;/p&gt;</description><category>automation</category><category>ca</category><category>letsencrypt</category><category>pki</category><category>ssl</category><category>tls</category><guid>https://blog.cyplo.net/posts/2015/11/17/lets-encrypt-certificate.html</guid><pubDate>Tue, 17 Nov 2015 09:51:25 GMT</pubDate></item><item><title>Automating running Debian in VirtualBox</title><link>https://blog.cyplo.net/posts/2013/07/16/automating-running-debian-in-virtualbox.html</link><dc:creator>Cyryl Płotnicki</dc:creator><description>&lt;div&gt;&lt;p&gt;I'm experimenting with service separation by having each service run in
its own operating system, all of the sharing hardware though. Why ?
Separation seems to be the only secure approach to running any software.
Check &lt;a class="reference external" href="http://theinvisiblethings.blogspot.com/"&gt;Joanna's&lt;/a&gt; blog out. I
went with VirtualBox on Debian 7 host, with, well, Debian 7 guests.
First I've prepared template VM by creating a new VM and just proceeding
with install. Then I tried spawning some clones of that, but having it
done manually takes quite some time  and is error prone. Did somebody
say automation ? Yes ! First, clone a VM, regenerating MAC addresses and
making sure the resource caps are good:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-1"&gt;&lt;/a&gt;vmrunner@storage:~$ cat prepare_vm
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#!/bin/bash&lt;/span&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-3"&gt;&lt;/a&gt;&lt;span class="nb"&gt;set&lt;/span&gt; -e
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$#&lt;/span&gt; -ne &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-5"&gt;&lt;/a&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; vm_name vm_number"&lt;/span&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-6"&gt;&lt;/a&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-9"&gt;&lt;/a&gt;&lt;span class="nv"&gt;VM_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-10"&gt;&lt;/a&gt;&lt;span class="nv"&gt;RAM_AMOUNT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"128"&lt;/span&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-11"&gt;&lt;/a&gt;&lt;span class="nv"&gt;DISK_SIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"2000"&lt;/span&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-12"&gt;&lt;/a&gt;&lt;span class="nv"&gt;VM_NUMBER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-13"&gt;&lt;/a&gt;&lt;span class="nv"&gt;RDP_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$((&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;3389&lt;/span&gt;&lt;span class="k"&gt;))&lt;/span&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-14"&gt;&lt;/a&gt;&lt;span class="nv"&gt;EXECUTION_CAP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"50"&lt;/span&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-16"&gt;&lt;/a&gt;VBoxManage clonevm fresh.cyplo.net --name &lt;span class="nv"&gt;$VM_NAME&lt;/span&gt; --mode machine --register
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-17"&gt;&lt;/a&gt;VBoxManage modifyvm &lt;span class="nv"&gt;$VM_NAME&lt;/span&gt; --vrde on
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-18"&gt;&lt;/a&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"setting RDP listening port to &lt;/span&gt;&lt;span class="nv"&gt;$RDP_PORT&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-19"&gt;&lt;/a&gt;VBoxManage modifyvm &lt;span class="nv"&gt;$VM_NAME&lt;/span&gt; --memory &lt;span class="nv"&gt;$RAM_AMOUNT&lt;/span&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-20"&gt;&lt;/a&gt;VBoxManage modifyvm &lt;span class="nv"&gt;$VM_NAME&lt;/span&gt; --vrdeport &lt;span class="nv"&gt;$RDP_PORT&lt;/span&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-21"&gt;&lt;/a&gt;VBoxManage modifyvm &lt;span class="nv"&gt;$VM_NAME&lt;/span&gt; --nic1 bridged --bridgeadapter1 eth0
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-22"&gt;&lt;/a&gt;VBoxManage modifyvm &lt;span class="nv"&gt;$VM_NAME&lt;/span&gt; --pae on
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-23"&gt;&lt;/a&gt;VBoxManage modifyvm &lt;span class="nv"&gt;$VM_NAME&lt;/span&gt; --cpuexecutioncap &lt;span class="nv"&gt;$EXECUTION_CAP&lt;/span&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-24"&gt;&lt;/a&gt;VBoxManage modifyvm &lt;span class="nv"&gt;$VM_NAME&lt;/span&gt; --hpet on
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-25"&gt;&lt;/a&gt;VBoxManage modifyvm &lt;span class="nv"&gt;$VM_NAME&lt;/span&gt; --hwvirtex on
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-26"&gt;&lt;/a&gt;VBoxManage modifyvm &lt;span class="nv"&gt;$VM_NAME&lt;/span&gt; --pagefusion on
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-27"&gt;&lt;/a&gt;VBoxManage modifyvm &lt;span class="nv"&gt;$VM_NAME&lt;/span&gt; --dvd none
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-28"&gt;&lt;/a&gt;VBoxManage modifyvm &lt;span class="nv"&gt;$VM_NAME&lt;/span&gt; --autostart-enabled on
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-29"&gt;&lt;/a&gt;VBoxManage modifyvm &lt;span class="nv"&gt;$VM_NAME&lt;/span&gt; --macaddress1 auto
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-30"&gt;&lt;/a&gt;VBoxManage modifyvm &lt;span class="nv"&gt;$VM_NAME&lt;/span&gt; --macaddress2 auto
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-31"&gt;&lt;/a&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"vm set up, listing all VMs:"&lt;/span&gt;
&lt;a name="rest_code_0c3d183ec2b147c9aadbabbee4a328f6-32"&gt;&lt;/a&gt;VBoxManage list vms
&lt;/pre&gt;&lt;p&gt;Then run the VM and change it into Debian
service host with new name and some software:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-1"&gt;&lt;/a&gt;vmrunner@storage:~$ cat kickstart_debian
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#/bin/bash&lt;/span&gt;
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-3"&gt;&lt;/a&gt;&lt;span class="nb"&gt;set&lt;/span&gt; -e
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$#&lt;/span&gt; -ne &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-5"&gt;&lt;/a&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; new_hostname new_domainname"&lt;/span&gt;
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-6"&gt;&lt;/a&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-9"&gt;&lt;/a&gt;&lt;span class="nv"&gt;NEW_HOSTNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-10"&gt;&lt;/a&gt;&lt;span class="nv"&gt;NEW_DOMAINNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-11"&gt;&lt;/a&gt;&lt;span class="nv"&gt;NEW_FQDN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$NEW_HOSTNAME&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$NEW_DOMAINNAME&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-12"&gt;&lt;/a&gt;aptitude update
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-13"&gt;&lt;/a&gt;aptitude dist-upgrade -y
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-14"&gt;&lt;/a&gt;aptitude install vim atop sudo -y
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-15"&gt;&lt;/a&gt;hostname
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-16"&gt;&lt;/a&gt;ifconfig
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-17"&gt;&lt;/a&gt;&lt;span class="nb"&gt;set&lt;/span&gt; -v
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-18"&gt;&lt;/a&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$NEW_FQDN&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &amp;gt; /etc/mailname
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-19"&gt;&lt;/a&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$NEW_HOSTNAME&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &amp;gt; /etc/hostname
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-20"&gt;&lt;/a&gt;sed -i &lt;span class="s2"&gt;"s/dc_other_hostnames\='.*'/dc_other_hostnames='&lt;/span&gt;&lt;span class="nv"&gt;$NEW_FQDN&lt;/span&gt;&lt;span class="s2"&gt;'/g"&lt;/span&gt; /etc/exim4/update-exim4.conf.conf
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-21"&gt;&lt;/a&gt;sed -i &lt;span class="s2"&gt;"s/127\.0\.1\.1.*/127.0.1.1 &lt;/span&gt;&lt;span class="nv"&gt;$NEW_FQDN&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$NEW_HOSTNAME&lt;/span&gt;&lt;span class="s2"&gt;/g"&lt;/span&gt; /etc/hosts
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-22"&gt;&lt;/a&gt;
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-23"&gt;&lt;/a&gt;rm /etc/ssh/ssh_host_*
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-24"&gt;&lt;/a&gt;dpkg-reconfigure openssh-server
&lt;a name="rest_code_acf4cfcc7e544d17aedda7cfdd385102-25"&gt;&lt;/a&gt;reboot
&lt;/pre&gt;&lt;p&gt;The script above needs to be run on guest, I'm using scp with known ssh keys to upload it and
then run via ssh. This step is to be automated in the future. Points to
improve:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;updating all the guests at once [Chef?]&lt;/li&gt;
&lt;li&gt;monitoring all guests at once [Nagios?]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Summarizing, I'm now running a Tor node, file server, caldav, carddav
and some other services on my home server. All of them in separate VMs.
And it's running quite well with 2GB of RAM. For more info on my home
server build check its
&lt;a class="reference external" href="https://blog.cyplo.net/2013/03/31/building-nas/"&gt;hardware&lt;/a&gt; and basic
&lt;a class="reference external" href="https://blog.cyplo.net/2013/05/26/building-nas-software/"&gt;software&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>automation</category><category>debian</category><category>separation</category><category>server</category><category>virtualbox</category><guid>https://blog.cyplo.net/posts/2013/07/16/automating-running-debian-in-virtualbox.html</guid><pubDate>Tue, 16 Jul 2013 14:22:47 GMT</pubDate></item></channel></rss>